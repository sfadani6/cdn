class SF_Highlighter_Gemini{constructor(){this.languageMap={javascript:"javascript",js:"javascript",mjs:"javascript",cjs:"javascript",typescript:"typescript",ts:"typescript",jsx:"jsx",tsx:"tsx",html:"markup",htm:"markup",xml:"markup",svg:"markup",rss:"markup",atom:"markup",css:"css",scss:"scss",less:"scss",php:"php",python:"python",py:"python",java:"java",csharp:"csharp",cs:"csharp",ruby:"ruby",rb:"ruby",go:"go",golang:"go",rust:"rust",rs:"rust",kotlin:"kotlin",kt:"kotlin",kts:"kotlin",swift:"swift",c:"c",h:"c",cpp:"cpp","c++":"cpp",cc:"cpp",hpp:"cpp",bash:"bash",shell:"bash",sh:"bash",powershell:"powershell",ps1:"powershell",sql:"sql",graphql:"graphql",r:"r",json:"json",webmanifest:"json",yaml:"yaml",yml:"yaml",docker:"docker",dockerfile:"docker",nginx:"nginx",markdown:"markdown",md:"markdown",perl:"perl",pl:"perl",lua:"lua",dart:"dart",scala:"scala"};const e={comment:/#.*|\/\/.*|\/\*[\s\S]*?\*\//,string:/"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|`(?:\\.|[^`\\])*`/,className:/\b[A-Z][\w]*/,function:/\b[a-zA-Z_]\w*(?=\s*\()/i,number:/\b-?(?:0x[\da-f]+|\d*\.?\d+(?:e[+-]?\d+)?)\b/i,boolean:/\b(?:true|false|null|nil|None)\b/,operator:/=>|->|--|\+\+|&&|\|\||!=|!==|==|===|<=|>=|<|>|[+\-*/%&|^~!?=]/,punctuation:/[{}[\]();,.:]/},t={...e,keyword:/\b(?:if|else|for|while|return|class|const|new|this|try|catch|finally|do|switch|case|break|continue|public|private|protected|implements|interface|extends|enum|super|true|false|null|import|package|void|static|final|abstract|synchronized|throws|throw|instanceof)\b/};this.grammar={javascript:{...e,keyword:/\b(?:if|else|for|while|return|function|class|const|let|var|import|export|from|new|this|try|catch|finally|do|switch|case|break|continue|delete|typeof|instanceof|in|of|yield|await|async|static|get|set|public|private|protected|implements|interface|extends|enum|super)\b/},typescript:{...e,keyword:/\b(?:if|else|for|while|return|function|class|const|let|var|import|export|from|new|this|try|catch|finally|do|switch|case|break|continue|delete|typeof|instanceof|in|of|yield|await|async|static|get|set|public|private|protected|implements|interface|extends|enum|super|type|readonly|declare|abstract|is|keyof|never|unknown|any)\b/},markup:{comment:/<!--[\s\S]*?-->/,tag:{pattern:/<\/?[\w\s="/.':#-]+>/,inside:{"attr-name":/[\w-]+(?=\s*=)/,"attr-value":/"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'/,punctuation:/[<>=\/]/}},entity:/&[\da-z]{1,8};/i},css:{comment:/\/\*[\s\S]*?\*\//,string:/"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'/,property:/\b[\w-]+(?=\s*:)/,keyword:/@(?:media|import|charset|namespace|font-face|keyframes|supports)/,function:/\b(?:rgb|rgba|hsl|hsla|url|attr|calc|var)\b/,punctuation:/[{}();:,]/,className:/\.[a-zA-Z_][\w-]*/},scss:{...e,comment:/\/\/.*|\/\*[\s\S]*?\*\//,property:/\$[\w-]+/,keyword:/@(?:if|else|for|while|each|import|mixin|include|extend|function|return|debug|warn|error)\b/},php:{...e,comment:/#.*|\/\/.*|\/\*[\s\S]*?\*\//,keyword:/\b(?:if|else|for|while|return|function|class|const|echo|new|this|try|catch|finally|do|switch|case|break|continue|die|exit|isset|unset|include|require|array|public|private|protected|implements|interface|extends|enum|super|true|false|null|__halt_compiler|abstract|and|as|callable|clone|declare|default|enddeclare|endfor|endforeach|endif|endswitch|endwhile|final|fn|foreach|global|goto|instanceof|insteadof|namespace|or|parent|static|trait|use|var|xor|yield|from)\b/,property:/\$[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/},python:{...e,comment:/#.*/,keyword:/\b(?:if|else|for|while|return|def|class|import|from|new|self|try|except|finally|do|break|continue|del|in|is|lambda|not|or|and|pass|raise|with|yield|async|await|True|False|None)\b/,decorator:/@\w+/},java:t,csharp:{...e,keyword:/\b(?:if|else|for|while|return|class|const|new|this|try|catch|finally|do|switch|case|break|continue|public|private|protected|implements|interface|extends|enum|base|true|false|null|using|namespace|void|static|sealed|abstract|override|virtual|async|await|get|set|in|is|as|params|ref|out)\b/},ruby:{...e,comment:/#.*/,keyword:/\b(?:if|else|for|while|return|def|class|module|new|self|case|when|begin|rescue|ensure|break|next|redo|retry|in|yield|super|true|false|nil|and|or|not|alias|undef)\b/,property:/[:@$]\w+/},go:{...e,keyword:/\b(?:if|else|for|range|return|func|struct|const|var|import|package|new|switch|case|break|continue|defer|go|goto|interface|map|select|type|fallthrough)\b/},rust:{...e,keyword:/\b(?:if|else|for|while|return|fn|struct|let|const|mut|match|loop|break|continue|in|use|mod|pub|enum|impl|trait|where|self|Self|super|true|false|async|await|static|move)\b/},kotlin:{...t,keyword:/\b(?:if|else|for|while|return|fun|class|val|var|when|is|in|object|package|import|this|super|true|false|null|try|catch|finally|break|continue|do|throw|interface|enum|data|sealed|companion|override|open|internal|private|protected|public|abstract|final)\b/},swift:{...e,keyword:/\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\b/},c:{...e,keyword:/\b(?:if|else|for|while|return|struct|const|void|int|char|float|double|long|short|unsigned|signed|sizeof|typedef|enum|static|auto|extern|register|goto|switch|case|break|continue|default|union|volatile)\b/},cpp:{...e,keyword:/\b(?:if|else|for|while|return|struct|const|void|int|char|float|double|long|short|unsigned|signed|sizeof|typedef|enum|static|auto|extern|register|goto|switch|case|break|continue|default|union|volatile|class|new|this|try|catch|throw|public|private|protected|friend|virtual|inline|namespace|using|template|typename|true|false|nullptr|delete|explicit|export|mutable|operator|reinterpret_cast|static_cast|const_cast|dynamic_cast|typeid)\b/},bash:{comment:/#.*/,string:/"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'/,keyword:/\b(?:if|then|else|elif|fi|for|in|do|done|while|until|case|esac|function|select|time|coproc)\b/,property:/\$\w+|\$\{[^}]+\}/,function:/\b(?:alias|bg|bind|break|builtin|caller|cd|command|compgen|complete|compopt|continue|declare|dirs|disown|echo|enable|eval|exec|exit|export|false|fc|fg|getopts|hash|help|history|jobs|kill|let|local|logout|mapfile|popd|printf|pushd|pwd|read|readonly|return|set|shift|shopt|source|suspend|test|times|trap|true|type|typeset|ulimit|umask|unalias|unset|wait)\b/},powershell:{comment:/#.*|<#[\s\S]*?#>/,string:/"(?:``|[^"])*"|'(?:''|[^'])*'/,keyword:/\b(?:if|else|elseif|for|foreach|while|do|until|switch|break|continue|return|function|filter|try|catch|finally|throw|trap|param|begin|process|end|class|enum|using|namespace)\b/,property:/\$\w+/},sql:{comment:/--.*|\/\*[\s\S]*?\*\//,string:/'(?:''|[^'])*'/,keyword:/\b(?:SELECT|FROM|WHERE|INSERT|INTO|VALUES|UPDATE|SET|DELETE|CREATE|TABLE|VIEW|INDEX|ALTER|DROP|TRUNCATE|AS|JOIN|INNER|LEFT|RIGHT|OUTER|ON|GROUP|BY|ORDER|HAVING|LIMIT|OFFSET|CASE|WHEN|THEN|ELSE|END|AND|OR|NOT|IN|IS|NULL|LIKE|BETWEEN|EXISTS|DISTINCT|COUNT|SUM|AVG|MAX|MIN|UNION|ALL)\b/i,number:/\b\d+(?:\.\d+)?\b/,operator:/[<>]=?|!=|=|[+\-*/%]/},json:{property:/"(?:\\.|[^"\\])*"(?=\s*:)/,string:/"(?:\\.|[^"\\])*"/,number:/\b-?\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,boolean:/\b(?:true|false|null)\b/,punctuation:/[{}[\]:,]/},yaml:{comment:/#.*/,string:/"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'/,keyword:/^(?:true|false|null|on|off|yes|no)$/i,property:/[\w-]+(?=:)/,punctuation:/[:{}\[\]\-,|&*>!]/},docker:{comment:/#.*/,keyword:/\b(?:FROM|RUN|CMD|LABEL|EXPOSE|ENV|ADD|COPY|ENTRYPOINT|VOLUME|USER|WORKDIR|ARG|ONBUILD|STOPSIGNAL|HEALTHCHECK|SHELL)\b/i,string:/"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'/}},this.highlightAll()}tokenize(e,t){const s=[];let a=0;const o=[];for(const n in t){const i=t[n]instanceof RegExp?t[n].source:t[n].pattern;o.push(`(?<${n}>${i})`)}const c=new RegExp(o.join("|"),"g");return e.replace(c,(n,...i)=>{const r=i.pop(),l=i[i.length-2];l>a&&s.push(e.slice(a,l));for(const p in r)if(r[p]!==void 0){s.push({type:p,content:r[p]});break}a=l+n.length}),a<e.length&&s.push(e.slice(a)),s}stringify(e){return e.map(t=>{if(typeof t=="string")return this.escapeHtml(t);const s=this.escapeHtml(t.content);return`<span class="token ${t.type}">${s}</span>`}).join("")}highlightAll(){document.querySelectorAll('pre > code[class*="language-"], pre > code[class*="lang-"]').forEach(t=>this.highlightElement(t))}highlightElement(e){const t=e.parentElement,s=this.getLanguageAlias(e),a=this.languageMap[s]||s,o=this.grammar[a]||this.grammar.javascript,c=e.textContent,n=this.tokenize(c,o),i=this.stringify(n),r=document.createElement("div");r.className="sf-highlighter-gemini-container",r.innerHTML=`
            <div class="sf-hg-header">
                <div class="sf-hg-info">
                    <span class="sf-hg-icon material-symbols-outlined" aria-hidden="true">code</span>
                    <span class="sf-hg-language">${s.toUpperCase()}</span>
                </div>
                <div class="sf-hg-controls">
                    <button class="sf-hg-button sf-hg-btn-copy" aria-label="Copy code">
                        <span class="material-symbols-outlined" aria-hidden="true">content_copy</span>
                    </button>
                    <button class="sf-hg-button sf-hg-btn-toggle" aria-label="Toggle code block">
                        <span class="material-symbols-outlined" aria-hidden="true">expand_less</span>
                    </button>
                </div>
            </div>
            <pre class="sf-hg-codeblock"><code class="language-${s}">${i}</code></pre>
        `,t.parentNode.replaceChild(r,t),this.addEventListeners(r)}getLanguageAlias(e){for(let t of e.classList)if(t.startsWith("language-")||t.startsWith("lang-"))return t.replace("language-","").replace("lang-","").toLowerCase();return"text"}addEventListeners(e){const t=e.querySelector(".sf-hg-btn-copy"),s=e.querySelector(".sf-hg-btn-toggle"),a=e.querySelector(".sf-hg-codeblock");s.addEventListener("click",()=>{a.classList.toggle("collapsed"),s.classList.toggle("collapsed")}),t.addEventListener("click",()=>{const o=a.textContent;navigator.clipboard.writeText(o).then(()=>{t.classList.add("copied"),setTimeout(()=>t.classList.remove("copied"),2e3)})})}escapeHtml(e){const t={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"};return e.replace(/[&<>"']/g,s=>t[s])}}document.addEventListener("DOMContentLoaded",()=>{new SF_Highlighter_Gemini});
